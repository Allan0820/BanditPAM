name: Linux - build source distribution and wheels
on:
  push:
    branches: # prevents running on tag push
      - '**'
  pull_request:
  release:
    types:
      - published
jobs:
  build_sdist:
    name: Build source distribution (SDist)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # Note: The dependencies below are not strictly necessary,
      # They just make things easier for our install_checks
      # in our setup.py when building the sdist on Ubuntu
      - name: Install Ubuntu dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential checkinstall libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev clang-format cppcheck

      # See note above
      - name: Install Python dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install -r requirements.txt

      - name: Build sdist
        run: python setup.py sdist --formats=gztar,zip

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: |
            dist/*.tar.gz
            # dist/*.zip # We can only upload one sdist per release

  build_wheels:
    needs: [build_sdist]
    name: Build wheels on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_BUILD: cp310* cp311* cp312* cp313*
          CIBW_BUILD_VERBOSITY: 3

      - uses: actions/upload-artifact@v4
        with:
          path: wheelhouse/*.whl
          name: artifact-${{ matrix.python-version }}-${{ matrix.arch }}

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          path: dist
          merge-multiple: true


      - name: Upload to TestPyPI on PR update
        if: ${{ github.event_name == 'pull_request' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_APIKEY }}
          repository-url: https://test.pypi.org/legacy/

      - name: Upload to PyPI on published release
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_APIKEY }}
