name: MacOS - build package and run tests
on: [push, pull_request]
jobs:
  build:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install MacOS dependencies
        run: |
          sudo rm -rf /Library/Developer/CommandLineTools
          echo "HERE1"
          xcode-select --install
          echo "HERE2"
          sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "HERE3"
          sudo brew install llvm lipomp armadillo
      - name: Install CPython from Anaconda
        run: |
          curl -XGET https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh > Anaconda3-2021.11-MacOSX-x86_64.sh
          sudo chmod 777 Anaconda3-2021.11-MacOSX-x86_64.sh
          ./Anaconda3-2021.11-MacOSX-x86_64.sh
          conda create -n "$p{{ matrix.python-version }}" python=${{ matrix.python-version }}
          conda activate p${{ matrix.python-version }}
      - name: Install Python dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install Armadillo 10.7.5+
        run: |
          cd ~
          git clone https://gitlab.com/conradsnicta/armadillo-code.git
          cd armadillo-code
          sudo cmake .
          sudo make install
      - name: Install carma
        run: |
          cd ~
          git clone https://github.com/RUrlus/carma.git
          cd carma
          mkdir build
          cd build
          sudo cmake -DCARMA_INSTALL_LIB=ON ..
          sudo cmake --build . --config Release --target install
          cd ~
      - name: Install BanditPAM package
        run: |
          pip install -vvv -e .
        env:
          # The default compiler on the Github Ubuntu runners is gcc
          # Would need to make a respective include change for clang 
          CPLUS_INCLUDE_PATH: /usr/local/include/carma
      - name: Downloading data files for tests
        run: |
          mkdir -p data
          curl -XGET https://motiwari.com/banditpam_data/scRNA_1k.csv > data/scRNA_1k.csv
          curl -XGET https://motiwari.com/banditpam_data/scrna_reformat.csv.gz > data/scrna_reformat.csv.gz
          curl -XGET https://motiwari.com/banditpam_data/MNIST_100.csv > data/MNIST_100.csv
          curl -XGET https://motiwari.com/banditpam_data/MNIST_1k.csv > data/MNIST_1k.csv
          curl -XGET https://motiwari.com/banditpam_data/MNIST_10k.tar.gz > data/MNIST_10k.tar.gz
          tar -xzvf data/MNIST_10k.tar.gz -C data
          curl -XGET https://motiwari.com/banditpam_data/MNIST_70k.tar.gz > data/MNIST_70k.tar.gz
          tar -xzvf data/MNIST_70k.tar.gz -C data
      - name: Run smaller suite of test cases
        run : |
          pytest tests/test_smaller.py 
      # - name: Run larger suite of test cases
      #   run : |
      #     pytest tests/test_larger.py 
      - name: Verify that the C++ executable compiles and runs
        run : |
          git clone https://github.com/ThrunGroup/BanditPAM
          cd BanditPAM
          mkdir build
          cd build
          sudo cmake ..
          sudo make
          src/BanditPAM -f ../data/MNIST_1k.csv -k 5