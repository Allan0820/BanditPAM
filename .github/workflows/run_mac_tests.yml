name: MacOS - build package and run tests
on: [push, pull_request]
jobs:
  build:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        # Python 3.11 on Mac errors with "Library not loaded: '@rpath/libarmadillo.11.dylib'"
        python-version: ["3.7", "3.8", "3.9", "3.10"]  #, "3.11"]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # On the MacOS machine, when installing from source,
      # we use LLVM Clang
      - name: Install MacOS dependencies
        run: |
          brew install llvm libomp armadillo

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pip setuptools wheel

      - name: Install Armadillo 10.7.5+
        run: |
          cd ~
          git clone https://gitlab.com/conradsnicta/armadillo-code.git
          cd armadillo-code
          sudo cmake .
          sudo make install

      - name: Install carma
        run: |
          cd ~
          git clone https://github.com/RUrlus/carma.git
          cd carma
          mkdir build
          cd build
          sudo cmake -DCARMA_INSTALL_LIB=ON ..
          sudo cmake --build . --config Release --target install
          cd ~

      - name: Install BanditPAM package
        run: |
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          source /Users/runner/.bash_profile
          export LDFLAGS="-L/usr/local/opt/llvm/lib, -L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export DYLD_LIBRARY_PATH=/usr/local/opt/libomp/lib:/usr/local/opt/libomp/include
          export CC=/usr/local/opt/llvm/bin/clang
          export CXX=/usr/local/opt/llvm/bin/clang++
          # The flags are necessary to ignore the pyproject.toml
          # See https://github.com/pypa/pip/issues/9738
          python -m pip install --no-use-pep517 --no-build-isolation -vvv -e .
        env:
          # The default compiler on the Github Ubuntu runners is gcc
          # Would need to make a respective include change for clang
          CPLUS_INCLUDE_PATH: /usr/local/include/carma:/usr/local/Cellar/libomp/15.0.2/include:/usr/local/Cellar/libomp/15.0.7/include

      - name: Downloading data files for tests
        run: |
          mkdir -p data
          curl -XGET https://motiwari.com/banditpam_data/MNIST_1k.csv > data/MNIST_1k.csv
          curl -XGET https://motiwari.com/banditpam_data/scRNA_1k.csv > data/scRNA_1k.csv
          curl -XGET https://motiwari.com/banditpam_data/scrna_reformat.csv.gz > data/scrna_reformat.csv.gz
          curl -XGET https://motiwari.com/banditpam_data/MNIST_100.csv > data/MNIST_100.csv
          curl -XGET https://motiwari.com/banditpam_data/MNIST_10k.tar.gz > data/MNIST_10k.tar.gz
          tar -xzvf data/MNIST_10k.tar.gz -C data
          curl -XGET https://motiwari.com/banditpam_data/MNIST_70k.tar.gz > data/MNIST_70k.tar.gz
          tar -xzvf data/MNIST_70k.tar.gz -C data

      - name: Run smaller suite of test cases
        run : |
          pytest tests/test_smaller.py

      # - name: Run larger suite of test cases
      #   run : |
      #     pytest tests/test_larger.py