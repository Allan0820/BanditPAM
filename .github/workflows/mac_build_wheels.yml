name: MacOS - build wheels
on: 
  push:
    branches: # prevents running on tag push
      - '**'
  pull_request:
  release:
    types:
      - published
jobs:
  build_wheels_macos:
    name: Build wheels on macos-latest
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      # Force compilation with LLVM's clang because Apple clang doesn't work well
      - name: Install MacOS dependencies
        run: |
          brew install libomp armadillo llvm
          brew link llvm --force
          brew link armadillo --force


      # Note: CIBW only supports CPython 3.8 and newer for universal2 and arm64 wheels
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          MACOSX_DEPLOYMENT_TARGET: "15"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"

          CIBW_BUILD: "cp310* cp311* cp312* cp313*"
          CIBW_BUILD_VERBOSITY: "3"
          CC: "/opt/homebrew/opt/llvm/bin/clang"
          CXX: "/opt/homebrew/opt/llvm/bin/clang++"
          CMAKE_C_COMPILER: "/opt/homebrew/opt/llvm/bin/clang"
          CMAKE_CXX_COMPILER: "/opt/homebrew/opt/llvm/bin/clang++"
          LDFLAGS: "-L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/libomp/lib"
          CPPFLAGS: "-I/opt/homebrew/opt/llvm/include -I/opt/homebrew/opt/libomp/include"

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels_macos]
    runs-on: ubuntu-latest # Can only upload from Linux containers
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - name: Upload to TestPyPI on PR update
        if: ${{ github.event_name == 'pull_request' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_APIKEY }}
          repository-url: https://test.pypi.org/legacy/

      - name: Upload to PyPI on published release
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_APIKEY }}